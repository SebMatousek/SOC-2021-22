#include <Arduino.h>
#include <WiFi.h>
#include <Wire.h>
#include <ESP32WebServer.h>
#include <ArduCAM.h>
#include <SPI.h>
#include "memorysaver.h"

const int CS = 16;

ArduCAM myCAM(OV5642, CS);

//you can change the value of wifiType to select Station or AP mode.
//Default is AP mode.
int wifiType = 0; // 0:Station  1:AP

//Station mode you should put your ssid and password
const char *ssid = "Matousek";      // Put your SSID here
const char *password = "Kokorin12"; // Put your PASSWORD here

const uint16_t port = 8090;
const char * host = "10.0.0.33";

WiFiClient client;

void start_capture()
{
  myCAM.clear_fifo_flag();
  myCAM.start_capture();
}

void camCapture(ArduCAM myCAM){ 

  size_t len = myCAM.read_fifo_length();

  if (len >= 0x07ffff){
    Serial.println("Over size.");
    return;
  }else if (len == 0 ){
    Serial.println("Size is 0.");
    return;
  }
  
  myCAM.CS_LOW();
  myCAM.set_fifo_burst();

  SPI.transfer(0xFF);

  String response = "POST /api/device/image HTTP/1.1\r\n";
  response += "Content-Type: image/jpeg\r\n";
  response += "Content-Length: " + String(len) + "\r\n";
  
  Serial.println("conected to the server");
  client.println(response);
  
  static const size_t bufferSize = 4096;
  static uint8_t buffer[bufferSize] = {0xFF};
  
  while (len) {
      size_t will_copy = (len < bufferSize) ? len : bufferSize;
      SPI.transferBytes(&buffer[0], &buffer[0], will_copy);
      if (!client.connected()) break;
      client.write(&buffer[0], will_copy);
      len -= will_copy;
  }

  Serial.println("end");
  client.print("$endOfImage$");
  
  myCAM.CS_HIGH();
}

void serverCapture()
{
  start_capture();
  camCapture(myCAM);
}

void communicateWithPhone()
{
  if (client.available())
  {
    String message = client.readString();

    if(message == "getPic")
    {
      Serial.println("sending picture");
      serverCapture();
    }
  }
  else
  {
    return;
  }
}

void setup()
{
  uint8_t vid, pid;
  uint8_t temp;
  //set the CS as an output:
  pinMode(CS, OUTPUT);

  Wire.begin();

  Serial.begin(115200);
  Serial.println(F("ArduCAM Start!"));

  // initialize SPI:
  SPI.begin(14, 12, 13, 16);
  SPI.setFrequency(4000000); //4MHz

  //Check if the ArduCAM SPI bus is OK
  myCAM.write_reg(ARDUCHIP_TEST1, 0x55);
  temp = myCAM.read_reg(ARDUCHIP_TEST1);
  if (temp != 0x55)
  {
    Serial.println(F("SPI1 interface Error!"));
    while (1)
      ;
  }

  myCAM.wrSensorReg16_8(0xff, 0x01);
  myCAM.rdSensorReg16_8(OV5642_CHIPID_HIGH, &vid);
  myCAM.rdSensorReg16_8(OV5642_CHIPID_LOW, &pid);
  if ((vid != 0x56) || (pid != 0x42))
  {
    Serial.println(F("Can't find OV5642 module!"));
  }
  else
    Serial.println(F("OV5642 detected."));

  //Change to JPEG capture mode and initialize the OV2640 module
  myCAM.set_format(JPEG);
  myCAM.InitCAM();

  myCAM.write_reg(ARDUCHIP_TIM, VSYNC_LEVEL_MASK); //VSYNC is active HIGH
  myCAM.OV5640_set_JPEG_size(OV5642_320x240);

  myCAM.clear_fifo_flag();

  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.println("...");
  }
 
  Serial.print("WiFi connected with IP: ");
  Serial.println(WiFi.localIP());

  if (!client.connect(host, port)) {
    Serial.println("Connection to host failed");
    
    while(1){}
  }

  delay(1000);
  Serial.println("should send something");
  client.print("#Golden");
}

void loop()
{
  communicateWithPhone();

  delay(50);
}
